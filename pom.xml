<project 
    xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jparfor</groupId>
    <artifactId>jparfor</artifactId>
    <version>1.1.29</version>

    <name>Java Parallel For</name>
    <url>http://jparfor.org/</url>
    <description>Implementation of parallel "for" based on Java threads.</description>
    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>dzavodnikov</id>
            <name>Dmitry Zavodnikov</name>
            <email>d.zavodnikov@gmail.com</email>
            <url>http://zavodnikov.org/</url>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+5</timezone>
        </developer>
    </developers>

    <properties>
        <github.global.server>github</github.global.server>
        <repository.owner>dzavodnikov</repository.owner>
        <repository.name>JParFor</repository.name>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--
        Build:
            $ mvn clean install
        
        Commit JavaDocs to the repo:
            $ mvn clean site
        
        Commit Maven artifacts to the repo:
            $ mvn clean deploy
    -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                   <source>${java.version}</source>
                   <target>${java.version}</target>
                </configuration>
            </plugin>
            <!--
                See:
                    https://maven.apache.org/plugin-developers/cookbook/attach-source-javadoc-artifacts.html
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                See:
                    https://maven.apache.org/plugin-developers/cookbook/attach-source-javadoc-artifacts.html
            -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <!--
                        See:
                            http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
                            https://stackoverflow.com/questions/22528767/
                    -->  
                    <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                See:
                    https://github.com/github/maven-plugins/
            -->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <message>JavaDocs for ${project.version}.</message>
                    <noJekyll>true</noJekyll>
                    <repositoryOwner>${repository.owner}</repositoryOwner>
                    <repositoryName>${repository.name}</repositoryName>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
            </plugin>
            <!--
                See:
                    https://github.com/github/maven-plugins/
            -->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <message>Maven artifacts for ${project.version}.</message>
                    <noJekyll>true</noJekyll>
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                    <branch>refs/heads/mvn-repo</branch>
                    <includes>
                        <include>**/*</include>
                    </includes>
                    <repositoryOwner>${repository.owner}</repositoryOwner>
                    <repositoryName>${repository.name}</repositoryName>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
